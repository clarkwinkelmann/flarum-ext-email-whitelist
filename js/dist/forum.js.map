{"version":3,"sources":["webpack://@clarkwinkelmann/bookmarks/webpack/bootstrap","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['common/components/Badge']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['common/models/Discussion']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['forum/states/GlobalSearchState']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@clarkwinkelmann/bookmarks/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/bookmarks/./src/forum/addDiscussionControls.js","webpack://@clarkwinkelmann/bookmarks/./src/forum/index.js","webpack://@clarkwinkelmann/bookmarks/./src/forum/addBadge.js","webpack://@clarkwinkelmann/bookmarks/./src/forum/addPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","bookmarkButton","discussion","translation","className","bookmarked","attribute","Button","component","icon","onclick","save","then","redraw","app","translator","trans","initializers","add","extend","Discussion","badges","this","Badge","label","type","DiscussionControls","items","context","session","user","forum","DiscussionPage","routes","bookmarks","path","IndexPage","LinkButton","href","route","search","stickyParams","current","setTitle","GlobalSearchState","params","DiscussionListState","filter","q"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['common/components/Badge'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['forum/utils/DiscussionControls'];","module.exports = flarum.core.compat['forum/states/GlobalSearchState'];","module.exports = flarum.core.compat['forum/states/DiscussionListState'];","module.exports = flarum.core.compat['common/components/LinkButton'];","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\n\n/* global m */\n\nfunction bookmarkButton(discussion, translation, className = '') {\n    const bookmarked = discussion.attribute('bookmarked');\n\n    return Button.component({\n        className: className + (bookmarked ? ' Button--bookmarked' : ''),\n        icon: bookmarked ? 'fas fa-bookmark' : 'far fa-bookmark',\n        onclick() {\n            discussion.save({\n                bookmarked: !bookmarked,\n            }).then(() => {\n                m.redraw();\n            });\n        },\n    }, app.translator.trans('clarkwinkelmann-bookmarks.forum.' + translation + '.' + (bookmarked ? 'remove' : 'add')));\n}\n\nexport default function () {\n    extend(DiscussionControls, 'userControls', (items, discussion, context) => {\n        if (!app.session.user || (app.forum.attribute('independentBookmarkButton') && context instanceof DiscussionPage)) {\n            return;\n        }\n\n        items.add('bookmark', bookmarkButton(discussion, 'dropdownButton'));\n    });\n\n    extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n        if (!app.session.user || !app.forum.attribute('independentBookmarkButton')) {\n            return;\n        }\n\n        items.add('bookmark', bookmarkButton(this.discussion, 'independentButton', 'Button Button--bookmark'));\n    });\n}\n","import app from 'flarum/forum/app';\nimport addBadge from './addBadge';\nimport addDiscussionControls from './addDiscussionControls';\nimport addPage from './addPage';\n\napp.initializers.add('clarkwinkelmann-bookmarks', () => {\n    addBadge();\n    addDiscussionControls();\n    addPage();\n});\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Badge from 'flarum/common/components/Badge';\nimport Discussion from 'flarum/common/models/Discussion';\n\nexport default function () {\n    extend(Discussion.prototype, 'badges', function (badges) {\n        if (this.attribute('bookmarked')) {\n            badges.add('bookmarked', Badge.component({\n                label: app.translator.trans('clarkwinkelmann-bookmarks.forum.badge'),\n                icon: 'fas fa-bookmark',\n                type: 'bookmark',\n            }));\n        }\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\n/* global m */\n\nexport default function () {\n    app.routes.bookmarks = {\n        path: '/bookmarks',\n        component: IndexPage,\n    };\n\n    extend(IndexPage.prototype, 'navItems', function (items) {\n        if (!app.session.user) {\n            return;\n        }\n\n        items.add('bookmarks', LinkButton.component({\n            href: app.route('bookmarks', app.search.stickyParams()),\n            icon: 'fas fa-bookmark',\n        }, app.translator.trans('clarkwinkelmann-bookmarks.forum.page.link')));\n    });\n\n    extend(IndexPage.prototype, 'setTitle', function () {\n        if (app.current.get('routeName') === 'bookmarks') {\n            app.setTitle(app.translator.trans('clarkwinkelmann-bookmarks.forum.page.title'));\n        }\n    });\n\n    // This code differs from the Subscription extension because it fixes https://github.com/flarum/core/issues/2516\n    extend(GlobalSearchState.prototype, 'params', function (params) {\n        params.bookmarked = app.current.get('routeName') === 'bookmarks';\n    })\n\n    extend(DiscussionListState.prototype, 'requestParams', function (params) {\n        if (this.params.bookmarked) {\n            params.filter.q = (params.filter.q || '') + ' is:bookmarked';\n        }\n    });\n}\n"],"sourceRoot":""}